apiVersion: v1
kind: Namespace
metadata:
  name: rabbitmq-server
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: rabbitmq-storage
reclaimPolicy: Retain
volumeBindingMode: Immediate
provisioner: kubernetes.io/no-provisioner
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: rabbitmq-volume
  labels:
    type: nfs
spec:
  storageClassName: rabbitmq-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    path: /apps
    server: 139.224.132.234
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
spec:
  storageClassName: rabbitmq-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq-disk-node
  name: rabbitmq-disk-node
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq-disk-node
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq-disk-node
    spec:
      containers:
      - args:
        - /tmp/supervisord_dist_node_main.sh
        env:
        - name: RABBITMQ_ADVANCED_CONFIG_FILE
          value: /etc/rabbitmq/advanced.config
        - name: RABBITMQ_CONFIG_FILE
          value: /etc/rabbitmq/rabbitmq
        - name: RABBITMQ_CONF_ENV_FILE
          value: /etc/rabbitmq/rabbitmq-env.conf
        - name: SERVICE_NAME
          value: rabbitmq_base_disk_node_host
        - name: SERVICE_TAGS
          value: rabbitmq1,tcp,5672
        image: xjyplayer/rabbitmq:1.0.1
        imagePullPolicy: ""
        name: rabbitmq-disk-node-container
        ports:
        - containerPort: 31004
        - containerPort: 31001
        - containerPort: 31002
        - containerPort: 31003
        resources: {}
        volumeMounts:
        - mountPath: /var/logs
          name: rabbitmq-node-pvc
          subPath: rabbitmq/logs/rabbitmq_disk_node
        - mountPath: /var/lib/rabbitmq/mnesia
          name: rabbitmq-node-pvc
          subPath: rabbitmq/data/rabbitmq_disk_node
        - mountPath: /etc/rabbitmq/rabbitmq.conf
          name: rabbitmq-conf
          subPath: rabbitmq/config/rabbitmq_disk_node/rabbitmq.conf
        - mountPath: /etc/rabbitmq/advanced.config
          name: rabbitmq-conf
          subPath: rabbitmq/config/rabbitmq_disk_node/advanced.config
        - mountPath: /etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf
          name: rabbitmq-conf
          subPath: rabbitmq/config/rabbitmq_disk_node/conf.d/management_agent.disable_metrics_collector.conf
        - mountPath: /etc/rabbitmq/rabbitmq-env.conf
          name: rabbitmq-conf
          subPath: rabbitmq/config/rabbitmq_disk_node/rabbitmq-env.conf
      hostname: rabbitmq-base-disk-node-host
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: rabbitmq-node-pvc
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
      - name: rabbitmq-conf
        configMap:
          name: rabbitmq-dist-config-map
          items:
          - key: rabbitmq.conf
            path: rabbitmq/config/rabbitmq_disk_node/rabbitmq.conf
          - key: advanced.config
            path: rabbitmq/config/rabbitmq_disk_node/advanced.config
          - key: management_agent.disable_metrics_collector.conf
            path: rabbitmq/config/rabbitmq_disk_node/conf.d/management_agent.disable_metrics_collector.conf
          - key: rabbitmq-env.conf
            path: rabbitmq/config/rabbitmq_disk_node/rabbitmq-env.conf
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq-disk-node
  name: rabbitmq-disk-node
spec:
  type: NodePort
  ports:
  - name: web-manager
    protocol : TCP
    port: 31004
    targetPort: 31004
    nodePort: 31004
  - name: client
    protocol : TCP
    port: 31001
    targetPort: 31001
    nodePort: 31001
  - name: erlang-dispatch
    protocol : TCP
    port: 31002
    targetPort: 31002
    nodePort: 31002
  - name: epmd
    protocol : TCP
    port: 31003
    targetPort: 31003
    nodePort: 31003
  selector:
    io.kompose.service: rabbitmq-disk-node
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq-disk-node
  name: rabbitmq-service
spec:
  ports:
  - name: web-manager
    protocol : TCP
    port: 31004
    targetPort: 31004
  selector:
    io.kompose.service: rabbitmq-disk-node
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rabbitmq-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: rabbitmq.52db.club
    http:
      paths:
      - backend:
          serviceName: rabbitmq-service
          servicePort: 31004
        path: /
  tls:
   - secretName: rabbitmq-imroc-io-tls
     hosts:
       - rabbitmq.52db.club

